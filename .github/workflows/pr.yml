name: PR

on:
  pull_request:
    branches: [Master]
jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: terraform validate
        uses: dflook/terraform-validate@v1
        id: validate
        with:
          path: terraform_code

      - name: Validate failed
        if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
        run: echo "terraform validate failed"

  Lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Run terraform fmt check
        run: terraform fmt -check -diff -recursive

  tfsec:
    name: tfsec sarif report
    runs-on: ubuntu-latest
    needs: Lint

    steps:
      - name: Clone repo
        uses: actions/checkout@master

      - name: Run tfsec with reviewdog output on the PR
        uses: reviewdog/action-tfsec@master
        with:
          github_token: ${{ secrets.github_token }}
          working_directory: terraform_code
          level: info 
          reporter: github-pr-review 
          filter_mode: nofilter
          flags: -tee 

  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs: tfsec
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          cd terraform_code
          terraform state pull
          terraform plan -input=false -no-color

      - name: Post Plan to GitHub PR
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: "github-actions[bot]"
          message: |
            ## plan
            ```
            ${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}
            ```

